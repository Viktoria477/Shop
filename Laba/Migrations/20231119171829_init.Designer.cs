// <auto-generated />
using System;
using Laba;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laba.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20231119171829_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("ItemsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("Laba.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Laba.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Laba.Alcohol", b =>
                {
                    b.HasBaseType("Laba.Item");

                    b.Property<float?>("Strength")
                        .HasColumnType("real");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.ToTable("Alcohols", (string)null);
                });

            modelBuilder.Entity("Laba.Clothes", b =>
                {
                    b.HasBaseType("Laba.Item");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clothes", (string)null);
                });

            modelBuilder.Entity("Laba.HomeAppliance", b =>
                {
                    b.HasBaseType("Laba.Item");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Lenght")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.ToTable("HomeAppliances", (string)null);
                });

            modelBuilder.Entity("Laba.Beer", b =>
                {
                    b.HasBaseType("Laba.Alcohol");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("Laba.Jacket", b =>
                {
                    b.HasBaseType("Laba.Clothes");

                    b.ToTable("Jackets");
                });

            modelBuilder.Entity("Laba.WashingMachine", b =>
                {
                    b.HasBaseType("Laba.HomeAppliance");

                    b.ToTable("WashingMachines");
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.HasOne("Laba.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laba.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.Alcohol", b =>
                {
                    b.HasOne("Laba.Item", null)
                        .WithOne()
                        .HasForeignKey("Laba.Alcohol", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.Clothes", b =>
                {
                    b.HasOne("Laba.Item", null)
                        .WithOne()
                        .HasForeignKey("Laba.Clothes", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.HomeAppliance", b =>
                {
                    b.HasOne("Laba.Item", null)
                        .WithOne()
                        .HasForeignKey("Laba.HomeAppliance", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.Beer", b =>
                {
                    b.HasOne("Laba.Alcohol", null)
                        .WithOne()
                        .HasForeignKey("Laba.Beer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.Jacket", b =>
                {
                    b.HasOne("Laba.Clothes", null)
                        .WithOne()
                        .HasForeignKey("Laba.Jacket", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba.WashingMachine", b =>
                {
                    b.HasOne("Laba.HomeAppliance", null)
                        .WithOne()
                        .HasForeignKey("Laba.WashingMachine", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
